{"version":3,"file":"static/js/815.b7d1979b.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.js","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\"\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class AuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n//     const AuthRedirectComponent = (props) => {\r\n//     if (!props.isAuth) return <Navigate to={\"/login\"}/>\r\n//     return <Component {...props} />\r\n// }\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({ \r\n    isAuth : state.auth.isAuth\r\n})\r\n\r\nconst ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rxGeE\",\"userData\":\"ProfileInfo_userData__YMbqs\",\"description\":\"ProfileInfo_description__fOBTy\",\"contacts\":\"ProfileInfo_contacts__qwsSh\",\"userLink\":\"ProfileInfo_userLink__24IJp\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   \r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{ props.status || \"=======\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/user_img.jpg';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const { profile, updateUserStatus, status } = props\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://img.freepik.com/free-vector/night-ocean-landscape-full-moon-and-stars-shine_107791-7397.jpg?w=2000' alt='wallpaper' />\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div className={classes.userData}>\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n                        alt='large_avatar' />\r\n                    <div className={classes.description}>\r\n                        <div>\r\n                            <div><b>{profile.fullName}</b></div>\r\n                            <ProfileStatusWithHooks status={status || 'Your status'} updateUserStatus={updateUserStatus} />\r\n\r\n                        </div>\r\n                        <div>\r\n                            <div> {profile.aboutMe}</div>\r\n                            <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                            <div>Job description: {profile.lookingForAJobDescription}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.contacts}>\r\n                    <div>Contacts:</div>\r\n                    <div>\r\n                        facebook: {profile.contacts.facebook != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.facebook} target='_blank'>\r\n                                {profile.contacts.facebook}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        website: {profile.contacts.website != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.website} target='_blank'>\r\n                                {profile.contacts.website}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        vk: {profile.contacts.vk != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.vk} target='_blank'>\r\n                                {profile.contacts.vk}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        twitter: {profile.contacts.twitter != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.twitter} target='_blank'>\r\n                                {profile.contacts.twitter}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        instagram: {profile.contacts.instagram != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.instagram} target='_blank'>\r\n                                {profile.contacts.instagram}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        youtube: {profile.contacts.youtube != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.youtube} target='_blank'>\r\n                                {profile.contacts.youtube}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        github: {profile.contacts.github != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.github} target='_blank'>\r\n                                {profile.contacts.github}</a>\r\n                            : '-'}\r\n                    </div>\r\n                    <div>\r\n                        mainLink: {profile.contacts.mainLink != null\r\n                            ? <a className={classes.userLink} href={profile.contacts.mainLink} target='_blank'>\r\n                                {profile.contacts.mainLink}</a>\r\n                            : '-'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__fZFfa\",\"posts\":\"MyPosts_posts__9R27f\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__y8J2Z\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://i.pinimg.com/736x/f5/27/41/f52741fb62bf1d821948a49204406bdc.jpg\" alt=\"ava\" />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.like_count}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {composeValidators, requiredField, maxLength } from '../../../utils';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst AddPostReduxForm = (props) => {\r\n\r\n    \r\n    \r\n    return (\r\n        <Form\r\n            initialValues={{\r\n\r\n            }}\r\n            onSubmit={values => {\r\n                const text = values.postText;\r\n                props.addPost(text)\r\n                // send values to the cloud\r\n            }}\r\n            validate={values => {\r\n\r\n                // do validation here, and return errors object\r\n            }}\r\n            //validateOnBlur={true}\r\n            >\r\n            {\r\n            ({ handleSubmit, pristine, form, submitting }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field\r\n                            name='postText'\r\n                            component={Textarea}\r\n                            type='text'\r\n                            placeholder=\"Enter your new post here\"\r\n                            afterSubmit={form.reset}\r\n                            validate={composeValidators (requiredField, maxLength(10))}>\r\n                                {/* {({ input, meta }) => (\r\n                                    <div className={classes.errorContainer}>\r\n                                        <textarea {...input} className={meta.error && meta.touched ? classes.required : undefined}/>\r\n                                        {meta.error && meta.touched && <span className={classes.requiredText}>{meta.error}</span>}\r\n                                    </div>\r\n                                )} */}\r\n                            </Field>\r\n                            \r\n                        \r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" disabled={submitting}>Add post</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n              \r\n            </Form>\r\n    )\r\n}\r\n\r\n\r\n\r\n    const MyPosts = (props) => {\r\n    const postsElements = [...props.postsData]\r\n        .reverse()\r\n        .map(post => <Post message={post.message} key={post.id} like_count={post.likesCount}/>)\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n \r\n    //    console.log(\"RENDER\")\r\n        return (\r\n            \r\n                <div className={classes.postsBlock}>\r\n                    <h3>My posts</h3>\r\n\r\n                    <AddPostReduxForm updateNewPostText={props.updateNewPostText} addPost={props.addPost} />\r\n                    <div className={classes.posts}>\r\n                        {\r\n                            postsElements\r\n                        }\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            \r\n        )\r\n    \r\n}\r\n\r\n//  class MyPosts extends React.Component {\r\n\r\n  \r\n        \r\n    \r\n//          render () {\r\n//            const postsElements = this.props.postsData.map(post => <Post message={post.message} key={post.id} like_count={post.likesCount}/>)\r\n    \r\n//             const newPostElement = React.createRef();\r\n\r\n//            console.log(\"RENDER\")\r\n//             return (\r\n                \r\n//                     <div className={classes.postsBlock}>\r\n//                         <h3>My posts</h3>\r\n    \r\n//                         <AddPostReduxForm updateNewPostText={this.props.updateNewPostText} addPost={this.props.addPost} />\r\n//                         <div className={classes.posts}>\r\n//                             {\r\n//                                 postsElements\r\n//                             }\r\n    \r\n                            \r\n//                         </div>\r\n//                     </div>\r\n                \r\n//             )\r\n//          }\r\n//     }\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n/*import {StoreContext} from \"../../../StoreContext\";*/\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n/*const MyPostsConteiner = (props) => {\r\n\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                let state = store.getState()\r\n\r\n                const addPost = () => {\r\n                    store.dispatch(addPostActionCreator())\r\n                }\r\n\r\n                const onPostChange = (text) => {\r\n                    store.dispatch(updateNewPostTextActionCreator(text))\r\n                }\r\n\r\n                return (\r\n                    <MyPosts updateNewPostText={onPostChange}\r\n                             addPost={addPost}\r\n                             postsData={state.profilePage.posts}\r\n                             newPostText={state.profilePage.newPostText}/>)\r\n            }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.posts\r\n    }\r\n}\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => dispatch(updateNewPostTextActionCreator(text)),\r\n        addPost: () => dispatch(addPostActionCreator())\r\n    }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    \r\n    \r\n    return (\r\n        \r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n    if (!userId ) {\r\n\r\n        userId = props.currentUserId\r\n    }\r\n    useEffect(() => {\r\n        props.getUserProfile(userId)\r\n        props.getUserStatus(userId)\r\n    }, [])\r\n\r\n   \r\n    return <Profile {...props} />\r\n\r\n}\r\n\r\n\r\n// class ProfileContainer extends React.Component {\r\n//\r\n//     componentDidMount() {\r\n//\r\n//\r\n//         axios\r\n//             .get(`https://62cd5e68a43bf7800856f5a2.mockapi.io/api/v1/profile/1`)\r\n//             .then(response => {\r\n//                 this.props.setUserProfile(response.data)\r\n//             })\r\n//     }\r\n//\r\n//     render() {\r\n//         console.log(this.props)\r\n//         return <Profile {...this.props} />\r\n//     }\r\n//\r\n// }\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        profile: state.profilePage.profile,\r\n        currentUserId: state.auth.id,\r\n        status: state.profilePage.status\r\n    }\r\n)\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getUserStatus, updateUserStatus}),\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"names":["withAuthRedirect","Component","AuthRedirectComponent","this","props","isAuth","to","React","connect","state","auth","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","value","profile","src","alt","className","classes","photos","large","userPhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","href","target","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","message","like_count","AddPostReduxForm","initialValues","onSubmit","values","text","postText","addPost","validate","handleSubmit","form","pristine","submitting","name","component","Textarea","type","placeholder","afterSubmit","reset","composeValidators","requiredField","maxLength","disabled","postsElements","postsData","reverse","map","post","likesCount","id","updateNewPostText","profilePage","posts","MyPosts","compose","currentUserId","getUserProfile","getUserStatus","userId","useParams"],"sourceRoot":""}